#version 330 core

//layout(location = 0) in vec4 vertexPosition_modelspace;
//
//layout(location = 1) in vec3 color;
//
//layout(location = 2) in vec2 texCoords;
//
//uniform mat4 u_M;
//uniform mat4 u_V;
//uniform mat4 u_P;
//
//out vec3 Color;
//
//out vec2 TexCoords;
//
//void main()
//{	
//	gl_Position = u_P * u_V * u_M * vertexPosition_modelspace;
//	Color = color;
//	TexCoords = texCoords;
//}

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;

uniform mat4 WVP;
out vec3 fragmentColor;
void main()
{
	gl_Position = WVP * vec4(vertexPosition_modelspace,1);
	fragmentColor = vertexColor;
}